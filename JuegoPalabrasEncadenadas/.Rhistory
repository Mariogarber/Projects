palabra_valida=FALSE
palabra = palabra_input
ultima_silaba = sacar_ultima_silaba(palabra)
if (substr(ultima_silaba, start = 1, stop=2) == "rr"){#no existen palabras
#que comiencen por "rr"
print(paste("El usuario ha ganado, no existe ninguna palabra que
comience por ",ultima_silaba))
print(paste(encadenacion_global))
palabra_valida=TRUE
jugando=FALSE
}
encadenacion <- sacar_encadenacion_eligiendo_ganadoras2(palabra)
if (encadenacion == "No existe" && jugando){
print(paste("El usuario ha ganado, no existe ninguna palabra que continue a ", palabra))
jugando=FALSE
palabra_valida=TRUE
}
else if (length(encadenacion) == 1 && jugando){
print(paste("La máquina ha ganado, ya que no hay ninguna palabra que continue a", encadenacion))
print(paste(encadenacion_global, encadenacion))
jugando = FALSE
palabra_valida=TRUE
}
else { #el ordenador elige una palabra
palabra_actual <- encadenacion[2]
silaba=sacar_ultima_silaba(palabra_actual)
encadenacion_global <- c(encadenacion_global, encadenacion[2])
print(paste("He elegido la palabra : ", palabra_actual))
print(paste("Dime una palabra que empieze por la sílaba '",
silaba, "'"))
palabra_valida=FALSE
}
}
while (palabra_valida == FALSE && jugando == TRUE){#si el juego sigue
#debemos introducir otra palabra
palabra_input <- readline(prompt = "Introduce una palabra válida -> ")
prim_sil <- sacar_primera_silaba(palabra_input)
if (palabra_input == "Me rindo"){ #puedes rendirte si no se te ocurre
#alguna palabra
print("El ordenador ha ganado porque te has rendido")
print(paste(encadenacion_global))
jugando = FALSE
}
else if((nchar(palabra_input) > 5 || nchar(palabra_input) == 5) &&
(prim_sil == silaba) && (palabra_input %in% dic)){
palabra_valida = TRUE
}else{
print("Palabra no válida, introduce otra")
}
}
}
juego()
sacar_encadenacion_eligiendo_ganadoras2 <- function(palabra){
palabras_match <- c()
palabra_elegida=""
for(i in 1:1){
ultima_silaba <- sacar_ultima_silaba(palabra)
encontrado <- FALSE
print(ultima_silaba)
if (substr(ultima_silaba, start = 1, stop = 1) == "a"){#filtramos para
#no tener que recorrer todo el diccionario entero
dic <- lista_a
}
if (substr(ultima_silaba, start = 1, stop = 1) == "b"){
dic <- lista_b
}
if (substr(ultima_silaba, start = 1, stop = 1) == "c"){
dic <- lista_c
}
if (substr(ultima_silaba, start = 1, stop = 1) == "d"){
dic <- lista_d
}
if (substr(ultima_silaba, start = 1, stop = 1) == "e"){
dic <- lista_e
}
if (substr(ultima_silaba, start = 1, stop = 1) == "f"){
dic <- lista_f
}
if (substr(ultima_silaba, start = 1, stop = 1) == "g"){
dic <- lista_g
}
if (substr(ultima_silaba, start = 1, stop = 1) == "h"){
dic <- lista_h
}
if (substr(ultima_silaba, start = 1, stop = 1) == "i"){
dic <- lista_i
}
if (substr(ultima_silaba, start = 1, stop = 1) == "j"){
dic <- lista_j
}
if (substr(ultima_silaba, start = 1, stop = 1) == "k"){
dic <- lista_k
}
if (substr(ultima_silaba, start = 1, stop = 1) == "l"){
dic <- lista_l
}
if (substr(ultima_silaba, start = 1, stop = 1) == "m"){
dic <- lista_m
}
if (substr(ultima_silaba, start = 1, stop = 1) == "n"){
dic <- lista_n
}
if (substr(ultima_silaba, start = 1, stop = 1) == "o"){
dic <- lista_o
}
if (substr(ultima_silaba, start = 1, stop = 1) == "p"){
dic <- lista_p
}
if (substr(ultima_silaba, start = 1, stop = 1) == "q"){
dic <- lista_q
}
if (substr(ultima_silaba, start = 1, stop = 1) == "r"){
dic <- lista_r
}
if (substr(ultima_silaba, start = 1, stop = 1) == "s"){
dic <- lista_s
}
if (substr(ultima_silaba, start = 1, stop = 1) == "t"){
dic <- lista_t
}
if (substr(ultima_silaba, start = 1, stop = 1) == "u"){
dic <- lista_u
}
if (substr(ultima_silaba, start = 1, stop = 1) == "v"){
dic <- lista_v
}
if (substr(ultima_silaba, start = 1, stop = 1) == "w"){
dic <- lista_w
}
if (substr(ultima_silaba, start = 1, stop = 1) == "x"){
dic <- lista_x
}
if (substr(ultima_silaba, start = 1, stop = 1) == "y"){
dic <- lista_y
}
if (substr(ultima_silaba, start = 1, stop = 1) == "z"){
dic <- lista_z
}
if (substr(ultima_silaba, start = 1, stop = 1) == "ñ"){
dic <- lista_ñ
}
dimension <- length(dic)
palabra_ganadora <- FALSE
j <- 1
while (j <= dimension && encontrado == FALSE){
palabra2 = dic[j]
palabra_letras <- unlist(strsplit(palabra2, ""))
primeras_letras <- paste(palabra_letras[1:str_count(ultima_silaba)],
collapse = "")
if ( primeras_letras == ultima_silaba){
primera_silaba <- sacar_primera_silaba(palabra2)
if (primera_silaba == ultima_silaba && palabra != palabra2){
print(palabra2)
palabras_match <- c(palabras_match, palabra2)
palabra_elegida <- palabras_match[sample(1:length(palabras_match))]
if (length(sacar_encadenacion_ganadora(palabra2)) == 1){
encontrado=TRUE
palabra_ganadora=TRUE
palabra_elegida=palabra2
}
}
}
#print(j)
j = j + 1
encadenacion <- c(palabra,palabra_elegida)
}
if (palabra_ganadora == TRUE){
encadenacion <- palabra_elegida
}
if (j > dimension){
print("No se puede continuar la encadenación.")
encadenacion <- "No existe"
}
return (encadenacion)
}
}
juego()
sacar_encadenacion_eligiendo_ganadoras2 <- function(palabra){
palabras_match <- c()
palabra_elegida=""
for(i in 1:1){
ultima_silaba <- sacar_ultima_silaba(palabra)
encontrado <- FALSE
print(ultima_silaba)
if (substr(ultima_silaba, start = 1, stop = 1) == "a"){#filtramos para
#no tener que recorrer todo el diccionario entero
dic <- lista_a
}
if (substr(ultima_silaba, start = 1, stop = 1) == "b"){
dic <- lista_b
}
if (substr(ultima_silaba, start = 1, stop = 1) == "c"){
dic <- lista_c
}
if (substr(ultima_silaba, start = 1, stop = 1) == "d"){
dic <- lista_d
}
if (substr(ultima_silaba, start = 1, stop = 1) == "e"){
dic <- lista_e
}
if (substr(ultima_silaba, start = 1, stop = 1) == "f"){
dic <- lista_f
}
if (substr(ultima_silaba, start = 1, stop = 1) == "g"){
dic <- lista_g
}
if (substr(ultima_silaba, start = 1, stop = 1) == "h"){
dic <- lista_h
}
if (substr(ultima_silaba, start = 1, stop = 1) == "i"){
dic <- lista_i
}
if (substr(ultima_silaba, start = 1, stop = 1) == "j"){
dic <- lista_j
}
if (substr(ultima_silaba, start = 1, stop = 1) == "k"){
dic <- lista_k
}
if (substr(ultima_silaba, start = 1, stop = 1) == "l"){
dic <- lista_l
}
if (substr(ultima_silaba, start = 1, stop = 1) == "m"){
dic <- lista_m
}
if (substr(ultima_silaba, start = 1, stop = 1) == "n"){
dic <- lista_n
}
if (substr(ultima_silaba, start = 1, stop = 1) == "o"){
dic <- lista_o
}
if (substr(ultima_silaba, start = 1, stop = 1) == "p"){
dic <- lista_p
}
if (substr(ultima_silaba, start = 1, stop = 1) == "q"){
dic <- lista_q
}
if (substr(ultima_silaba, start = 1, stop = 1) == "r"){
dic <- lista_r
}
if (substr(ultima_silaba, start = 1, stop = 1) == "s"){
dic <- lista_s
}
if (substr(ultima_silaba, start = 1, stop = 1) == "t"){
dic <- lista_t
}
if (substr(ultima_silaba, start = 1, stop = 1) == "u"){
dic <- lista_u
}
if (substr(ultima_silaba, start = 1, stop = 1) == "v"){
dic <- lista_v
}
if (substr(ultima_silaba, start = 1, stop = 1) == "w"){
dic <- lista_w
}
if (substr(ultima_silaba, start = 1, stop = 1) == "x"){
dic <- lista_x
}
if (substr(ultima_silaba, start = 1, stop = 1) == "y"){
dic <- lista_y
}
if (substr(ultima_silaba, start = 1, stop = 1) == "z"){
dic <- lista_z
}
if (substr(ultima_silaba, start = 1, stop = 1) == "ñ"){
dic <- lista_ñ
}
dimension <- length(dic)
palabra_ganadora <- FALSE
j <- 1
while (j <= dimension && encontrado == FALSE){
palabra2 = dic[j]
palabra_letras <- unlist(strsplit(palabra2, ""))
primeras_letras <- paste(palabra_letras[1:str_count(ultima_silaba)],
collapse = "")
if ( primeras_letras == ultima_silaba){
primera_silaba <- sacar_primera_silaba(palabra2)
if (primera_silaba == ultima_silaba && palabra != palabra2){
palabras_match <- c(palabras_match, palabra2)
palabra_elegida <- palabras_match[sample(1:length(palabras_match))]
if (length(sacar_encadenacion_ganadora(palabra2)) == 1){
encontrado=TRUE
palabra_ganadora=TRUE
palabra_elegida=palabra2
}
}
}
#print(j)
j = j + 1
encadenacion <- c(palabra,palabra_elegida)
}
if (palabra_ganadora == TRUE){
encadenacion <- palabra_elegida
}
if (j > dimension){
print("No se puede continuar la encadenación.")
encadenacion <- "No existe"
}
return (encadenacion)
}
}
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
juego()
#funcion que inicia el juego
juego <- function() {
jugando=TRUE
palabra_valida=FALSE
while (palabra_valida == FALSE){#hasta que introduzcamos una palabra válida
palabra_input <- readline(prompt = "Introduce una palabra válida -> ")
if((nchar(palabra_input) > 5 || nchar(palabra_input) == 5) &&
palabra_input %in% dic){
palabra_valida = TRUE
}
else{
print("Palabra no válida, introduce otra")
}
}
while (jugando == TRUE){
encadenacion_global = c(palabra_input)
palabra_valida=FALSE
palabra = palabra_input
ultima_silaba = sacar_ultima_silaba(palabra)
if (substr(ultima_silaba, start = 1, stop=2) == "rr"){#no existen palabras
#que comiencen por "rr"
print(paste("El usuario ha ganado, no existe ninguna palabra que comience por ",ultima_silaba))
print(paste(encadenacion_global))
palabra_valida=TRUE
jugando=FALSE
}
encadenacion <- sacar_encadenacion_eligiendo_ganadoras2(palabra)
else if (encadenacion == "No existe" && jugando){
#funcion que inicia el juego
juego <- function() {
jugando=TRUE
palabra_valida=FALSE
while (palabra_valida == FALSE){#hasta que introduzcamos una palabra válida
palabra_input <- readline(prompt = "Introduce una palabra válida -> ")
if((nchar(palabra_input) > 5 || nchar(palabra_input) == 5) &&
palabra_input %in% dic){
palabra_valida = TRUE
}
else{
print("Palabra no válida, introduce otra")
}
}
while (jugando == TRUE){
encadenacion_global = c(palabra_input)
palabra_valida=FALSE
palabra = palabra_input
ultima_silaba = sacar_ultima_silaba(palabra)
if (substr(ultima_silaba, start = 1, stop=2) == "rr"){#no existen palabras
#que comiencen por "rr"
print(paste("El usuario ha ganado, no existe ninguna palabra que comience por ",ultima_silaba))
print(paste(encadenacion_global))
palabra_valida=TRUE
jugando=FALSE
}
encadenacion <- sacar_encadenacion_eligiendo_ganadoras2(palabra)
else if(encadenacion == "No existe" && jugando){
#funcion que inicia el juego
juego <- function() {
jugando=TRUE
palabra_valida=FALSE
while (palabra_valida == FALSE){#hasta que introduzcamos una palabra válida
palabra_input <- readline(prompt = "Introduce una palabra válida -> ")
if((nchar(palabra_input) > 5 || nchar(palabra_input) == 5) &&
palabra_input %in% dic){
palabra_valida = TRUE
}
else{
print("Palabra no válida, introduce otra")
}
}
while (jugando == TRUE){
encadenacion_global = c(palabra_input)
palabra_valida=FALSE
palabra = palabra_input
ultima_silaba = sacar_ultima_silaba(palabra)
if (substr(ultima_silaba, start = 1, stop=2) == "rr"){#no existen palabras
#que comiencen por "rr"
print(paste("El usuario ha ganado, no existe ninguna palabra que comience por ",ultima_silaba))
print(paste(encadenacion_global))
palabra_valida=TRUE
jugando=FALSE
}
encadenacion <- sacar_encadenacion_eligiendo_ganadoras2(palabra)
if (encadenacion == "No existe" && jugando){
print(paste("El usuario ha ganado, no existe ninguna palabra que continue a ", palabra))
jugando=FALSE
palabra_valida=TRUE
}
else if (length(encadenacion) == 1 && jugando){
print(paste("La máquina ha ganado, ya que no hay ninguna palabra que continue a", encadenacion))
print(paste(encadenacion_global, encadenacion))
jugando = FALSE
palabra_valida=TRUE
}
else { #el ordenador elige una palabra
palabra_actual <- encadenacion[2]
silaba=sacar_ultima_silaba(palabra_actual)
encadenacion_global <- c(encadenacion_global, encadenacion[2])
print(paste("He elegido la palabra : ", palabra_actual))
print(paste("Dime una palabra que empieze por la sílaba '",
silaba, "'"))
palabra_valida=FALSE
}
}
while (palabra_valida == FALSE && jugando == TRUE){#si el juego sigue
#debemos introducir otra palabra
palabra_input <- readline(prompt = "Introduce una palabra válida -> ")
prim_sil <- sacar_primera_silaba(palabra_input)
if (palabra_input == "Me rindo"){ #puedes rendirte si no se te ocurre
#alguna palabra
print("El ordenador ha ganado porque te has rendido")
print(paste(encadenacion_global))
jugando = FALSE
}
else if((nchar(palabra_input) > 5 || nchar(palabra_input) == 5) &&
(prim_sil == silaba) && (palabra_input %in% dic)){
palabra_valida = TRUE
}else{
print("Palabra no válida, introduce otra")
}
}
}
juego()
#funcion que inicia el juego
juego <- function() {
jugando=TRUE
palabra_valida=FALSE
while (palabra_valida == FALSE){#hasta que introduzcamos una palabra válida
palabra_input <- readline(prompt = "Introduce una palabra válida -> ")
if((nchar(palabra_input) > 5 || nchar(palabra_input) == 5) &&
palabra_input %in% dic){
palabra_valida = TRUE
}
else{
print("Palabra no válida, introduce otra")
}
}
while (jugando == TRUE){
encadenacion_global = c(palabra_input)
palabra_valida=FALSE
palabra = palabra_input
ultima_silaba = sacar_ultima_silaba(palabra)
if (substr(ultima_silaba, start = 1, stop=2) == "rr"){#no existen palabras
#que comiencen por "rr"
print(paste("El usuario ha ganado, no existe ninguna palabra que comience por ",ultima_silaba))
print(paste(encadenacion_global))
palabra_valida=TRUE
jugando=FALSE
}
else{
encadenacion <- sacar_encadenacion_eligiendo_ganadoras2(palabra)
if (encadenacion == "No existe" && jugando){
print(paste("El usuario ha ganado, no existe ninguna palabra que continue a ", palabra))
jugando=FALSE
palabra_valida=TRUE
}
else if (length(encadenacion) == 1 && jugando){
print(paste("La máquina ha ganado, ya que no hay ninguna palabra que continue a", encadenacion))
print(paste(encadenacion_global, encadenacion))
jugando = FALSE
palabra_valida=TRUE
}
else { #el ordenador elige una palabra
palabra_actual <- encadenacion[2]
silaba=sacar_ultima_silaba(palabra_actual)
encadenacion_global <- c(encadenacion_global, encadenacion[2])
print(paste("He elegido la palabra : ", palabra_actual))
print(paste("Dime una palabra que empieze por la sílaba '",
silaba, "'"))
palabra_valida=FALSE
}
}
while (palabra_valida == FALSE && jugando == TRUE){#si el juego sigue
#debemos introducir otra palabra
palabra_input <- readline(prompt = "Introduce una palabra válida -> ")
prim_sil <- sacar_primera_silaba(palabra_input)
if (palabra_input == "Me rindo"){ #puedes rendirte si no se te ocurre
#alguna palabra
print("El ordenador ha ganado porque te has rendido")
print(paste(encadenacion_global))
jugando = FALSE
}
else if((nchar(palabra_input) > 5 || nchar(palabra_input) == 5) &&
(prim_sil == silaba) && (palabra_input %in% dic)){
palabra_valida = TRUE
}else{
print("Palabra no válida, introduce otra")
}
}
}
}
juego()
juego
juego()
